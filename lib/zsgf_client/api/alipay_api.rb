=begin
#用户全部 API 文档

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.13.0-SNAPSHOT

=end

require 'cgi'

module ZSGFClient
  class AlipayApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # 创建当面付订单
    # 创建一个当面付订单，并返回支付二维码。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [AlipayCreateOrderRequest] :alipay_create_order_request 
    # @return [StringApiResponse]
    def alipay_create_order(app_key, opts = {})
      data, _status_code, _headers = alipay_create_order_with_http_info(app_key, opts)
      data
    end

    # 创建当面付订单
    # 创建一个当面付订单，并返回支付二维码。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [AlipayCreateOrderRequest] :alipay_create_order_request 
    # @return [Array<(StringApiResponse, Integer, Hash)>] StringApiResponse data, response status code and response headers
    def alipay_create_order_with_http_info(app_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AlipayApi.alipay_create_order ...'
      end
      # verify the required parameter 'app_key' is set
      if @api_client.config.client_side_validation && app_key.nil?
        fail ArgumentError, "Missing the required parameter 'app_key' when calling AlipayApi.alipay_create_order"
      end
      # resource path
      local_var_path = '/Alipay/{appKey}/CreateOrder'.sub('{' + 'appKey' + '}', CGI.escape(app_key.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'alipay_create_order_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'StringApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"AlipayApi.alipay_create_order",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AlipayApi#alipay_create_order\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 创建PC支付订单
    # 创建一个PC支付订单，并返回支付页面。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [AlipayCreateOrderPagePayRequest] :alipay_create_order_page_pay_request 
    # @return [StringApiResponse]
    def alipay_create_order_page_pay(app_key, opts = {})
      data, _status_code, _headers = alipay_create_order_page_pay_with_http_info(app_key, opts)
      data
    end

    # 创建PC支付订单
    # 创建一个PC支付订单，并返回支付页面。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [AlipayCreateOrderPagePayRequest] :alipay_create_order_page_pay_request 
    # @return [Array<(StringApiResponse, Integer, Hash)>] StringApiResponse data, response status code and response headers
    def alipay_create_order_page_pay_with_http_info(app_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AlipayApi.alipay_create_order_page_pay ...'
      end
      # verify the required parameter 'app_key' is set
      if @api_client.config.client_side_validation && app_key.nil?
        fail ArgumentError, "Missing the required parameter 'app_key' when calling AlipayApi.alipay_create_order_page_pay"
      end
      # resource path
      local_var_path = '/Alipay/{appKey}/CreateOrderPagePay'.sub('{' + 'appKey' + '}', CGI.escape(app_key.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'alipay_create_order_page_pay_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'StringApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"AlipayApi.alipay_create_order_page_pay",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AlipayApi#alipay_create_order_page_pay\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 创建WAP支付订单
    # 创建一个WAP支付订单，并返回支付页面。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [AlipayCreateOrderWapPayRequest] :alipay_create_order_wap_pay_request 
    # @return [StringApiResponse]
    def alipay_create_order_wap_pay(app_key, opts = {})
      data, _status_code, _headers = alipay_create_order_wap_pay_with_http_info(app_key, opts)
      data
    end

    # 创建WAP支付订单
    # 创建一个WAP支付订单，并返回支付页面。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [AlipayCreateOrderWapPayRequest] :alipay_create_order_wap_pay_request 
    # @return [Array<(StringApiResponse, Integer, Hash)>] StringApiResponse data, response status code and response headers
    def alipay_create_order_wap_pay_with_http_info(app_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AlipayApi.alipay_create_order_wap_pay ...'
      end
      # verify the required parameter 'app_key' is set
      if @api_client.config.client_side_validation && app_key.nil?
        fail ArgumentError, "Missing the required parameter 'app_key' when calling AlipayApi.alipay_create_order_wap_pay"
      end
      # resource path
      local_var_path = '/Alipay/{appKey}/CreateOrderWapPay'.sub('{' + 'appKey' + '}', CGI.escape(app_key.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'alipay_create_order_wap_pay_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'StringApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"AlipayApi.alipay_create_order_wap_pay",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AlipayApi#alipay_create_order_wap_pay\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 获取订单详情
    # 查询订单详情，包括订单状态和支付信息。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :order_no 订单号
    # @return [AlipayTradeQueryResponseApiResponse]
    def alipay_order_detail(app_key, opts = {})
      data, _status_code, _headers = alipay_order_detail_with_http_info(app_key, opts)
      data
    end

    # 获取订单详情
    # 查询订单详情，包括订单状态和支付信息。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :order_no 订单号
    # @return [Array<(AlipayTradeQueryResponseApiResponse, Integer, Hash)>] AlipayTradeQueryResponseApiResponse data, response status code and response headers
    def alipay_order_detail_with_http_info(app_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AlipayApi.alipay_order_detail ...'
      end
      # verify the required parameter 'app_key' is set
      if @api_client.config.client_side_validation && app_key.nil?
        fail ArgumentError, "Missing the required parameter 'app_key' when calling AlipayApi.alipay_order_detail"
      end
      # resource path
      local_var_path = '/Alipay/{appKey}/OrderDetail'.sub('{' + 'appKey' + '}', CGI.escape(app_key.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'orderNo'] = opts[:'order_no'] if !opts[:'order_no'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AlipayTradeQueryResponseApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"AlipayApi.alipay_order_detail",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AlipayApi#alipay_order_detail\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 发起订单退款
    # 对指定订单进行退款操作。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :amount 退款金额
    # @option opts [String] :order_no 订单号
    # @return [AlipayTradeRefundResponseApiResponse]
    def alipay_order_refund(app_key, opts = {})
      data, _status_code, _headers = alipay_order_refund_with_http_info(app_key, opts)
      data
    end

    # 发起订单退款
    # 对指定订单进行退款操作。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :amount 退款金额
    # @option opts [String] :order_no 订单号
    # @return [Array<(AlipayTradeRefundResponseApiResponse, Integer, Hash)>] AlipayTradeRefundResponseApiResponse data, response status code and response headers
    def alipay_order_refund_with_http_info(app_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AlipayApi.alipay_order_refund ...'
      end
      # verify the required parameter 'app_key' is set
      if @api_client.config.client_side_validation && app_key.nil?
        fail ArgumentError, "Missing the required parameter 'app_key' when calling AlipayApi.alipay_order_refund"
      end
      # resource path
      local_var_path = '/Alipay/{appKey}/OrderRefund'.sub('{' + 'appKey' + '}', CGI.escape(app_key.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'amount'] = opts[:'amount'] if !opts[:'amount'].nil?
      query_params[:'orderNo'] = opts[:'order_no'] if !opts[:'order_no'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AlipayTradeRefundResponseApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"AlipayApi.alipay_order_refund",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AlipayApi#alipay_order_refund\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 支付成功回调通知
    # 处理支付宝支付成功的同步通知。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [ReturnPageNotifyRequest] :return_page_notify_request 
    # @return [BooleanApiResponse]
    def alipay_return_page_notify(app_key, opts = {})
      data, _status_code, _headers = alipay_return_page_notify_with_http_info(app_key, opts)
      data
    end

    # 支付成功回调通知
    # 处理支付宝支付成功的同步通知。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [ReturnPageNotifyRequest] :return_page_notify_request 
    # @return [Array<(BooleanApiResponse, Integer, Hash)>] BooleanApiResponse data, response status code and response headers
    def alipay_return_page_notify_with_http_info(app_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AlipayApi.alipay_return_page_notify ...'
      end
      # verify the required parameter 'app_key' is set
      if @api_client.config.client_side_validation && app_key.nil?
        fail ArgumentError, "Missing the required parameter 'app_key' when calling AlipayApi.alipay_return_page_notify"
      end
      # resource path
      local_var_path = '/Alipay/{appKey}/ReturnPageNotify'.sub('{' + 'appKey' + '}', CGI.escape(app_key.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json-patch+json', 'application/json', 'text/json', 'application/*+json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'return_page_notify_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'BooleanApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"AlipayApi.alipay_return_page_notify",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AlipayApi#alipay_return_page_notify\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
