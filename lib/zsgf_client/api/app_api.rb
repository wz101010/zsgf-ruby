=begin
#用户全部 API 文档

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.13.0-SNAPSHOT

=end

require 'cgi'

module ZSGFClient
  class AppApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # 应用详情
    # 根据应用Key获取应用的详细信息和属性。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :prop_code 属性代码
    # @return [AppInfoResultApiResponse]
    def app_info(app_key, opts = {})
      data, _status_code, _headers = app_info_with_http_info(app_key, opts)
      data
    end

    # 应用详情
    # 根据应用Key获取应用的详细信息和属性。
    # @param app_key [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :prop_code 属性代码
    # @return [Array<(AppInfoResultApiResponse, Integer, Hash)>] AppInfoResultApiResponse data, response status code and response headers
    def app_info_with_http_info(app_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AppApi.app_info ...'
      end
      # verify the required parameter 'app_key' is set
      if @api_client.config.client_side_validation && app_key.nil?
        fail ArgumentError, "Missing the required parameter 'app_key' when calling AppApi.app_info"
      end
      # resource path
      local_var_path = '/App/{appKey}/Info'.sub('{' + 'appKey' + '}', CGI.escape(app_key.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'propCode'] = opts[:'prop_code'] if !opts[:'prop_code'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'AppInfoResultApiResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"AppApi.app_info",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AppApi#app_info\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
